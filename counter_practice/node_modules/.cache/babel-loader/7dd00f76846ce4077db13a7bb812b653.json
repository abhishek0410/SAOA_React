{"ast":null,"code":"import _classCallCheck from \"H:\\\\SAOA_React\\\\counter_practice\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"H:\\\\SAOA_React\\\\counter_practice\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"H:\\\\SAOA_React\\\\counter_practice\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"H:\\\\SAOA_React\\\\counter_practice\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"H:\\\\SAOA_React\\\\counter_practice\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"H:\\\\SAOA_React\\\\counter_practice\\\\src\\\\components\\\\counter.jsx\";\nimport React, { Component } from \"react\";\n\nvar Counter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Counter, _Component);\n\n  function Counter() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Counter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Counter)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleIncrement = function () {\n      _this.setState({\n        value: _this.state.value + 1\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Counter, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        class: \"badge badge-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, this.props.counter.value));\n    }\n  }]);\n\n  return Counter;\n}(Component);\n\nexport default Counter;","map":{"version":3,"sources":["H:\\SAOA_React\\counter_practice\\src\\components\\counter.jsx"],"names":["React","Component","Counter","handleIncrement","setState","value","state","props","counter"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;;IAGMC,O;;;;;;;;;;;;;;;;;;UAIFC,e,GAAgB,YAAI;AACf,YAAKC,QAAL,CAAc;AAACC,QAAAA,KAAK,EAAC,MAAKC,KAAL,CAAWD,KAAX,GAAiB;AAAxB,OAAd;AACA,K;;;;;;;6BAIG;AACJ,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,KAAK,EAAC,kBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgC,KAAKE,KAAL,CAAWC,OAAX,CAAmBH,KAAnD,CADJ,CADJ;AAQH;;;;EAnBiBJ,S;;AAsBtB,eAAeC,OAAf","sourcesContent":["import React , {Component} from \"react\";\r\n\r\n\r\nclass Counter extends Component{\r\n  \r\n\r\n\r\n    handleIncrement=()=>{\r\n         this.setState({value:this.state.value+1})\r\n        }\r\n \r\n  \r\n\r\n    render(){\r\n        return( \r\n            <div>\r\n                <span class=\"badge badge-info\">{this.props.counter.value}</span>\r\n                {/* <button onClick = {this.handleIncrement} type=\"button\" class=\"btn btn-secondary\">Increment</button>\r\n                <button onClick = {this.props.handleDelete} type=\"button\" class=\"btn btn-danger\">Delete</button> */}\r\n            </div>\r\n    );\r\n       \r\n    }\r\n}\r\n \r\nexport default Counter;\r\n\r\n"]},"metadata":{},"sourceType":"module"}